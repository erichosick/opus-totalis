{
  "name": "@sqlpm-util/opus-totalis",
  "version": "1.0.0",
  "license": "GPL-3.0-or-later",
  "private": true,
  "description": "**opus-totalis**: A template generated by software-toolchain-automation which generates a pnpm workspace that contains all of our packages, projects, and utilities with a focus on node, sql and nextjs.",
  "keywords": [
    "typescript",
    "node",
    "workspace",
    "javascript"
  ],
  "homepage": "https://github.com/erichosick/opus-totalis",
  "bugs": {
    "url": "https://github.com/erichosick/opus-totalis/issues",
    "email": "erichosick@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/erichosick/opus-totalis"
  },
  "author": {
    "name": "Eric Hosick",
    "email": "erichosick@gmail.com",
    "url": "https://github.com/erichosick"
  },
  "contributors": [],
  "packageManager": "pnpm@^9.7.1",
  "engines": {
    "node": "^18.18.0 || ^20.9.0 || >=21.1.0",
    "npm": "Use pnpm instead of npm."
  },
  "scripts": {
    "git:haschanges": "sh -c 'if [ -n \"$(git status --porcelain)\" ]; then echo \"You have uncommitted changes. Please commit or stash them before releasing.\"; exit 1; fi'",
    "release": "pnpm run git:haschanges && pnpm -r run release && commit-and-tag-version",
    "release:first": "commit-and-tag-version --first-release",
    "release:dryrun": "pnpm run git:haschanges && pnpm -r run release:dryrun && commit-and-tag-version --dry-run",
    "preinstall": "pnpm exec only-allow pnpm",
    "publish:all": "pnpm recursive publish",
    "publish:dryrun": "pnpm recursive publish --dry-run",
    "deploy:all": "pnpm run git:haschanges && pnpm build && pnpm release && pnpm publish:all",
    "build": "pnpm exec nx run-many -t build",
    "build:changed": "pnpm exec nx affected --target=build --base=origin/main --head=HEAD",
    "ci:build:changed": "pnpm exec nx affected --target=build --base=remotes/origin/main --head=HEAD",
    "ci:release": "pnpm -r run release && commit-and-tag-version",
    "build:watch": "pnpm exec nx watch --all -- nx run \\$NX_PROJECT_NAME:build",
    "develop:watch": "pnpm exec nx watch --all -- nx run \\$NX_PROJECT_NAME:develop",
    "eslint": "pnpm exec eslint --config eslint.config.mjs . .config",
    "lint": "pnpm eslint",
    "lint:watch": "nodemon --config .config/nodemon-lint.config.json --exec 'pnpm eslint'",
    "prettier:write": "pnpm exec prettier . --write",
    "prettier:check": "pnpm exec prettier . --check",
    "test": "JEST_COVERAGE=true NODE_ENV=test jest --config jest.config.ts",
    "test:watch": "JEST_COVERAGE=false NODE_ENV=test jest --watch --config jest.config.ts",
    "test:debug": "jest --watch --config jest.config.ts",
    "ci:test:changed": "git diff --name-only --diff-filter=ACM $(git merge-base HEAD remotes/origin/main) HEAD | xargs pnpm exec jest --findRelatedTests --config jest.config.ts",
    "commitlint": "pnpm exec commitlint --config=.config/commitlint.config.mjs --strict --verbose",
    "prepare": "husky"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.4.0",
    "@commitlint/config-conventional": "^19.2.2",
    "@eslint/js": "^9.9.0",
    "@jest/globals": "^29.7.0",
    "@nx/jest": "^19.6.0",
    "@types/jest": "^29.5.12",
    "@types/node": "^22.4.0",
    "commit-and-tag-version": "^12.4.1",
    "eslint": "9.*",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-jest": "^28.8.0",
    "eslint-plugin-react": "^7.35.0",
    "globals": "^15.9.0",
    "husky": "^9.1.4",
    "jest": "^29.7.0",
    "jest-expect-message": "^1.1.3",
    "nx": "19.4.3",
    "only-allow": "^1.2.1",
    "prettier": "^3.3.3",
    "ts-jest": "^29.2.4",
    "ts-node": "^10.9.2",
    "tslib": "^2.6.3",
    "tsx": "^4.17.0",
    "typescript": "^5.5.4",
    "typescript-eslint": "^8.1.0"
  },
  "pnpm": {
    "overrides": {
      "eslint": "9.x",
      "@types/react": "18.3.3",
      "@types/react-dom": "18.3.0",
      "react": "18.3.1",
      "react-dom": "18.3.1"
    }
  }
}
